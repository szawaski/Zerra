// Copyright © KaKush LLC
// Written By Steven Zawaski
// Licensed to you under the MIT license

using System;
using System.Linq.Expressions;

namespace Zerra.Repository
{
    public sealed class EventQueryMany<TModel> : Query<TModel> where TModel : class, new()
    {
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo) : this(null, temporalDateFrom, temporalDateTo, null, null, null, null, null, null, null, null, null) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, QueryOrder<TModel>? order) : this(null, temporalDateFrom, temporalDateTo, null, null, null, null, null, order, null, null, null) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, QueryOrder<TModel>? order, int? skip, int? take) : this(null, temporalDateFrom, temporalDateTo, null, null, null, null, null, order, skip, take, null) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, Expression<Func<TModel, bool>>? where) : this(null, temporalDateFrom, temporalDateTo, null, null, null, null, where, null, null, null, null) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order) : this(null, temporalDateFrom, temporalDateTo, null, null, null, null, where, order, null, null, null) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take) : this(null, temporalDateFrom, temporalDateTo, null, null, null, null, where, order, skip, take, null) { }

        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, Graph<TModel>? graph) : this(null, temporalDateFrom, temporalDateTo, null, null, null, null, null, null, null, null, graph) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(null, temporalDateFrom, temporalDateTo, null, null, null, null, null, order, null, null, graph) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(null, temporalDateFrom, temporalDateTo, null, null, null, null, null, order, skip, take, graph) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, Expression<Func<TModel, bool>>? where, Graph<TModel>? graph) : this(null, temporalDateFrom, temporalDateTo, null, null, null, null, where, null, null, null, graph) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(null, temporalDateFrom, temporalDateTo, null, null, null, null, where, order, null, null, graph) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(null, temporalDateFrom, temporalDateTo, null, null, null, null, where, order, skip, take, graph) { }

        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake) : this(null, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, null, null, null, null, null) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order) : this(null, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, null, order, null, null, null) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order, int? skip, int? take) : this(null, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, null, order, skip, take, null) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where) : this(null, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, where, null, null, null, null) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order) : this(null, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, where, order, null, null, null) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take) : this(null, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, where, order, skip, take, null) { }

        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, Graph<TModel>? graph) : this(null, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, null, null, null, null, graph) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(null, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, null, order, null, null, graph) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(null, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, null, order, skip, take, graph) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, Graph<TModel>? graph) : this(null, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, where, null, null, null, graph) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(null, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, where, order, null, null, graph) { }
        public EventQueryMany(DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(null, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, where, order, skip, take, graph) { }

        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo) : this(null, null, null, temporalNumberFrom, temporalNumberTo, null, null, null, null, null, null, null) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, QueryOrder<TModel>? order) : this(null, null, null, temporalNumberFrom, temporalNumberTo, null, null, null, order, null, null, null) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, QueryOrder<TModel>? order, int? skip, int? take) : this(null, null, null, temporalNumberFrom, temporalNumberTo, null, null, null, order, skip, take, null) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, Expression<Func<TModel, bool>>? where) : this(null, null, null, temporalNumberFrom, temporalNumberTo, null, null, where, null, null, null, null) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order) : this(null, null, null, temporalNumberFrom, temporalNumberTo, null, null, where, order, null, null, null) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take) : this(null, null, null, temporalNumberFrom, temporalNumberTo, null, null, where, order, skip, take, null) { }

        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, Graph<TModel>? graph) : this(null, null, null, temporalNumberFrom, temporalNumberTo, null, null, null, null, null, null, graph) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(null, null, null, temporalNumberFrom, temporalNumberTo, null, null, null, order, null, null, graph) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(null, null, null, temporalNumberFrom, temporalNumberTo, null, null, null, order, skip, take, graph) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, Expression<Func<TModel, bool>>? where, Graph<TModel>? graph) : this(null, null, null, temporalNumberFrom, temporalNumberTo, null, null, where, null, null, null, graph) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(null, null, null, temporalNumberFrom, temporalNumberTo, null, null, where, order, null, null, graph) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(null, null, null, temporalNumberFrom, temporalNumberTo, null, null, where, order, skip, take, graph) { }

        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake) : this(null, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, null, null, null, null, null) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order) : this(null, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, null, order, null, null, null) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order, int? skip, int? take) : this(null, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, null, order, skip, take, null) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where) : this(null, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, where, null, null, null, null) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order) : this(null, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, where, order, null, null, null) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take) : this(null, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, where, order, skip, take, null) { }

        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, Graph<TModel>? graph) : this(null, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, null, null, null, null, graph) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(null, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, null, order, null, null, graph) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(null, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, null, order, skip, take, graph) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, Graph<TModel>? graph) : this(null, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, where, null, null, null, graph) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(null, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, where, order, null, null, graph) { }
        public EventQueryMany(ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(null, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, where, order, skip, take, graph) { }

        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, null, null, null, null, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, QueryOrder<TModel>? order) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, null, null, null, order, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, QueryOrder<TModel>? order, int? skip, int? take) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, null, null, null, order, skip, take, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, Expression<Func<TModel, bool>>? where) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, null, null, where, null, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, null, null, where, order, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, null, null, where, order, skip, take, null) { }

        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, Graph<TModel>? graph) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, null, null, null, null, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, null, null, null, order, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, null, null, null, order, skip, take, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, Expression<Func<TModel, bool>>? where, Graph<TModel>? graph) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, null, null, where, null, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, null, null, where, order, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, null, null, where, order, skip, take, graph) { }

        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, null, null, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, null, order, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order, int? skip, int? take) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, null, order, skip, take, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, where, null, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, where, order, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, where, order, skip, take, null) { }

        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, Graph<TModel>? graph) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, null, null, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, null, order, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, null, order, skip, take, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, Graph<TModel>? graph) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, where, null, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, where, order, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(temporalOrder, temporalDateFrom, temporalDateTo, null, null, temporalSkip, temporalTake, where, order, skip, take, graph) { }

        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, null, null, null, null, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, QueryOrder<TModel>? order) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, null, null, null, order, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, QueryOrder<TModel>? order, int? skip, int? take) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, null, null, null, order, skip, take, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, Expression<Func<TModel, bool>>? where) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, null, null, where, null, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, null, null, where, order, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, null, null, where, order, skip, take, null) { }

        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, Graph<TModel>? graph) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, null, null, null, null, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, null, null, null, order, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, null, null, null, order, skip, take, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, Expression<Func<TModel, bool>>? where, Graph<TModel>? graph) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, null, null, where, null, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, null, null, where, order, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, null, null, where, order, skip, take, graph) { }

        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, null, null, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, null, order, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order, int? skip, int? take) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, null, order, skip, take, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, where, null, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, where, order, null, null, null) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, where, order, skip, take, null) { }

        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, Graph<TModel>? graph) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, null, null, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, null, order, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, null, order, skip, take, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, Graph<TModel>? graph) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, where, null, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, Graph<TModel>? graph) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, where, order, null, null, graph) { }
        public EventQueryMany(TemporalOrder temporalOrder, ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph) : this(temporalOrder, null, null, temporalNumberFrom, temporalNumberTo, temporalSkip, temporalTake, where, order, skip, take, graph) { }

        public EventQueryMany(TemporalOrder? temporalOrder, DateTime? temporalDateFrom, DateTime? temporalDateTo, ulong? temporalNumberFrom, ulong? temporalNumberTo, int? temporalSkip, int? temporalTake, Expression<Func<TModel, bool>>? where, QueryOrder<TModel>? order, int? skip, int? take, Graph<TModel>? graph)
            : base(QueryOperation.EventMany)
        {
            this.TemporalOrder = temporalOrder ?? Repository.TemporalOrder.Newest;
            this.TemporalDateFrom = temporalDateFrom;
            this.TemporalDateTo = temporalDateTo;
            this.TemporalNumberFrom = temporalNumberFrom;
            this.TemporalNumberTo = temporalNumberTo;
            this.TemporalSkip = temporalSkip;
            this.TemporalTake = temporalTake;

            this.Where = where;
            this.Order = order;
            this.Skip = skip;
            this.Take = take;
            this.Graph = graph;
        }
    }
}
